name: Build and Test Using Conda

on:
  push:
    branches:
      - master

  workflow_dispatch:


#   # schedule:
#   #  # * is a special character in YAML so you have to quote this string
#   #  - cron:  '*/0 * * * *' # run once a day


jobs:
  pyapprox_unit_tests:
    name: Setup Pyapprox dependencies with conda
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6]
#        os: [ubuntu-latest, macos-10.14]
#        fenics is not available for windows so do not test
#        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Setup Miniconda with Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: pyapprox-base
        python-version: ${{ matrix.python-version }}
#        channels: defaults,conda-forge
        channels: defaults
        environment-file: environment.yml
        auto-update-conda: true
#        use-only-tar-bz2: true
        auto-activate-base: false
    - name: Conda list
      shell: bash -l {0} # - l {0} is needed to activate created env
      run: |
        conda list
        conda env list
    - name: Setup PyApprox
      shell: bash -l {0}
      run: |
        pip install -e .
    - name: Test PyApprox
      shell: bash -l {0}
      run: |
        pytest -s --cov-report term --cov=pyapprox pyapprox/tests/ pyapprox/bayesian_inference/tests pyapprox/models pyapprox/benchmarks pyapprox/polynomial_chaos/tests pyapprox/univariate_polynomials/tests
# -s disables capturing stdout so print statements print to screen
#        python setup.py test
      